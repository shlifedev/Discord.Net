/* 
 * Unity Cloud Build
 *
 * This API is intended to be used in conjunction with the Unity Cloud Build service. A tool for building your Unity projects in the Cloud.  See https://developer.cloud.unity3d.com for more information.  ## Making requests This website is built to allow requests to be made against the API. If you are currently logged into Cloud Build you should be able to make requests without entering an API key.   You can find your API key in the Unity Cloud Services portal by clicking on 'Cloud Build Preferences' in the sidebar. Copy the API Key and paste it into the upper left corner of this website. It will be used in all subsequent requests.  ## Clients The Unity Cloud Build API is based upon Swagger. Client libraries to integrate with your projects can easily be generated with the [Swagger Code Generator](https://github.com/swagger-api/swagger-codegen).  The JSON schema required to generate a client for this API version is located here:  ``` [API_URL][BASE_PATH]/api.json ```  ## Authorization The Unity Cloud Build API requires an access token from your Unity Cloud Build account, which can be found at https://build.cloud.unity3d.com/login/me  To authenticate requests, include a Basic Authentication header with your API key as the value. e.g.  ``` Authorization: Basic [YOUR API KEY] ```  ## Pagination Paged results will take two parameters. A page number that is calculated based upon the per_page amount. For instance if there are 40 results and you specify page 2 with per_page set to 10 you will receive records 11-20.  Paged results will also return a Content-Range header. For the example above the content range header would look like this:  ``` Content-Range: items 11-20/40 ```  ## Versioning The API version is indicated in the request URL. Upgrading to a newer API version can be done by changing the path.  The API will receive a new version in the following cases:    * removal of a path or request type   * addition of a required field   * removal of a required field  The following changes are considered backwards compatible and will not trigger a new API version:    * addition of an endpoint or request type   * addition of an optional field   * removal of an optional field   * changes to the format of ids  ## Rate Limiting Requests against the Cloud Build API are limited to a rate of 100 per minute. To preserve the quality of service throughout Cloud Build, additional rate limits may apply to some actions. For example, polling aggressively instead of using webhooks or making API calls with a high concurrency may result in rate limiting.  It is not intended for these rate limits to interfere with any legitimate use of the API. Please contact support at <cloudbuild@unity3d.com> if your use is affected by this rate limit.  You can check the returned HTTP headers for any API request to see your current rate limit status.   * __X-RateLimit-Limit:__ maximum number of requests per minute   * __X-RateLimit-Remaining:__ remaining number of requests in the current window   * __X-RateLimit-Reset:__ time at which the current window will reset (UTC epoch seconds)  Once you go over the rate limit you will receive an error response: ``` HTTP Status: 429 {   \"error\": \"Rate limit exceeded, retry in XX seconds\" } ``` 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing OrgsorgidprojectsprojectidbuildtargetsBuilds
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class OrgsorgidprojectsprojectidbuildtargetsBuildsTests
    {
        // TODO uncomment below to declare an instance variable for OrgsorgidprojectsprojectidbuildtargetsBuilds
        //private OrgsorgidprojectsprojectidbuildtargetsBuilds instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of OrgsorgidprojectsprojectidbuildtargetsBuilds
            //instance = new OrgsorgidprojectsprojectidbuildtargetsBuilds();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrgsorgidprojectsprojectidbuildtargetsBuilds
        /// </summary>
        [Test]
        public void OrgsorgidprojectsprojectidbuildtargetsBuildsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" OrgsorgidprojectsprojectidbuildtargetsBuilds
            //Assert.IsInstanceOfType<OrgsorgidprojectsprojectidbuildtargetsBuilds> (instance, "variable 'instance' is a OrgsorgidprojectsprojectidbuildtargetsBuilds");
        }


        /// <summary>
        /// Test the property 'Build'
        /// </summary>
        [Test]
        public void BuildTest()
        {
            // TODO unit test for the property 'Build'
        }
        /// <summary>
        /// Test the property 'Buildtargetid'
        /// </summary>
        [Test]
        public void BuildtargetidTest()
        {
            // TODO unit test for the property 'Buildtargetid'
        }
        /// <summary>
        /// Test the property 'BuildTargetName'
        /// </summary>
        [Test]
        public void BuildTargetNameTest()
        {
            // TODO unit test for the property 'BuildTargetName'
        }
        /// <summary>
        /// Test the property 'BuildGUID'
        /// </summary>
        [Test]
        public void BuildGUIDTest()
        {
            // TODO unit test for the property 'BuildGUID'
        }
        /// <summary>
        /// Test the property 'BuildStatus'
        /// </summary>
        [Test]
        public void BuildStatusTest()
        {
            // TODO unit test for the property 'BuildStatus'
        }
        /// <summary>
        /// Test the property 'CleanBuild'
        /// </summary>
        [Test]
        public void CleanBuildTest()
        {
            // TODO unit test for the property 'CleanBuild'
        }
        /// <summary>
        /// Test the property 'FailureDetails'
        /// </summary>
        [Test]
        public void FailureDetailsTest()
        {
            // TODO unit test for the property 'FailureDetails'
        }
        /// <summary>
        /// Test the property 'CanceledBy'
        /// </summary>
        [Test]
        public void CanceledByTest()
        {
            // TODO unit test for the property 'CanceledBy'
        }
        /// <summary>
        /// Test the property 'Platform'
        /// </summary>
        [Test]
        public void PlatformTest()
        {
            // TODO unit test for the property 'Platform'
        }
        /// <summary>
        /// Test the property 'WorkspaceSize'
        /// </summary>
        [Test]
        public void WorkspaceSizeTest()
        {
            // TODO unit test for the property 'WorkspaceSize'
        }
        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Test]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Finished'
        /// </summary>
        [Test]
        public void FinishedTest()
        {
            // TODO unit test for the property 'Finished'
        }
        /// <summary>
        /// Test the property 'CheckoutStartTime'
        /// </summary>
        [Test]
        public void CheckoutStartTimeTest()
        {
            // TODO unit test for the property 'CheckoutStartTime'
        }
        /// <summary>
        /// Test the property 'CheckoutTimeInSeconds'
        /// </summary>
        [Test]
        public void CheckoutTimeInSecondsTest()
        {
            // TODO unit test for the property 'CheckoutTimeInSeconds'
        }
        /// <summary>
        /// Test the property 'BuildStartTime'
        /// </summary>
        [Test]
        public void BuildStartTimeTest()
        {
            // TODO unit test for the property 'BuildStartTime'
        }
        /// <summary>
        /// Test the property 'BuildTimeInSeconds'
        /// </summary>
        [Test]
        public void BuildTimeInSecondsTest()
        {
            // TODO unit test for the property 'BuildTimeInSeconds'
        }
        /// <summary>
        /// Test the property 'PublishStartTime'
        /// </summary>
        [Test]
        public void PublishStartTimeTest()
        {
            // TODO unit test for the property 'PublishStartTime'
        }
        /// <summary>
        /// Test the property 'PublishTimeInSeconds'
        /// </summary>
        [Test]
        public void PublishTimeInSecondsTest()
        {
            // TODO unit test for the property 'PublishTimeInSeconds'
        }
        /// <summary>
        /// Test the property 'TotalTimeInSeconds'
        /// </summary>
        [Test]
        public void TotalTimeInSecondsTest()
        {
            // TODO unit test for the property 'TotalTimeInSeconds'
        }
        /// <summary>
        /// Test the property 'LastBuiltRevision'
        /// </summary>
        [Test]
        public void LastBuiltRevisionTest()
        {
            // TODO unit test for the property 'LastBuiltRevision'
        }
        /// <summary>
        /// Test the property 'Changeset'
        /// </summary>
        [Test]
        public void ChangesetTest()
        {
            // TODO unit test for the property 'Changeset'
        }
        /// <summary>
        /// Test the property 'Favorited'
        /// </summary>
        [Test]
        public void FavoritedTest()
        {
            // TODO unit test for the property 'Favorited'
        }
        /// <summary>
        /// Test the property 'Label'
        /// </summary>
        [Test]
        public void LabelTest()
        {
            // TODO unit test for the property 'Label'
        }
        /// <summary>
        /// Test the property 'Deleted'
        /// </summary>
        [Test]
        public void DeletedTest()
        {
            // TODO unit test for the property 'Deleted'
        }
        /// <summary>
        /// Test the property 'Headless'
        /// </summary>
        [Test]
        public void HeadlessTest()
        {
            // TODO unit test for the property 'Headless'
        }
        /// <summary>
        /// Test the property 'CredentialsOutdated'
        /// </summary>
        [Test]
        public void CredentialsOutdatedTest()
        {
            // TODO unit test for the property 'CredentialsOutdated'
        }
        /// <summary>
        /// Test the property 'DeletedBy'
        /// </summary>
        [Test]
        public void DeletedByTest()
        {
            // TODO unit test for the property 'DeletedBy'
        }
        /// <summary>
        /// Test the property 'QueuedReason'
        /// </summary>
        [Test]
        public void QueuedReasonTest()
        {
            // TODO unit test for the property 'QueuedReason'
        }
        /// <summary>
        /// Test the property 'CooldownDate'
        /// </summary>
        [Test]
        public void CooldownDateTest()
        {
            // TODO unit test for the property 'CooldownDate'
        }
        /// <summary>
        /// Test the property 'ScmBranch'
        /// </summary>
        [Test]
        public void ScmBranchTest()
        {
            // TODO unit test for the property 'ScmBranch'
        }
        /// <summary>
        /// Test the property 'UnityVersion'
        /// </summary>
        [Test]
        public void UnityVersionTest()
        {
            // TODO unit test for the property 'UnityVersion'
        }
        /// <summary>
        /// Test the property 'XcodeVersion'
        /// </summary>
        [Test]
        public void XcodeVersionTest()
        {
            // TODO unit test for the property 'XcodeVersion'
        }
        /// <summary>
        /// Test the property 'AuditChanges'
        /// </summary>
        [Test]
        public void AuditChangesTest()
        {
            // TODO unit test for the property 'AuditChanges'
        }
        /// <summary>
        /// Test the property 'ProjectVersion'
        /// </summary>
        [Test]
        public void ProjectVersionTest()
        {
            // TODO unit test for the property 'ProjectVersion'
        }
        /// <summary>
        /// Test the property 'ProjectName'
        /// </summary>
        [Test]
        public void ProjectNameTest()
        {
            // TODO unit test for the property 'ProjectName'
        }
        /// <summary>
        /// Test the property 'ProjectId'
        /// </summary>
        [Test]
        public void ProjectIdTest()
        {
            // TODO unit test for the property 'ProjectId'
        }
        /// <summary>
        /// Test the property 'OrgId'
        /// </summary>
        [Test]
        public void OrgIdTest()
        {
            // TODO unit test for the property 'OrgId'
        }
        /// <summary>
        /// Test the property 'OrgFk'
        /// </summary>
        [Test]
        public void OrgFkTest()
        {
            // TODO unit test for the property 'OrgFk'
        }
        /// <summary>
        /// Test the property 'Filetoken'
        /// </summary>
        [Test]
        public void FiletokenTest()
        {
            // TODO unit test for the property 'Filetoken'
        }
        /// <summary>
        /// Test the property 'Links'
        /// </summary>
        [Test]
        public void LinksTest()
        {
            // TODO unit test for the property 'Links'
        }
        /// <summary>
        /// Test the property 'BuildReport'
        /// </summary>
        [Test]
        public void BuildReportTest()
        {
            // TODO unit test for the property 'BuildReport'
        }
        /// <summary>
        /// Test the property 'TestResults'
        /// </summary>
        [Test]
        public void TestResultsTest()
        {
            // TODO unit test for the property 'TestResults'
        }
        /// <summary>
        /// Test the property 'Error'
        /// </summary>
        [Test]
        public void ErrorTest()
        {
            // TODO unit test for the property 'Error'
        }

    }

}
