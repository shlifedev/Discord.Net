/* 
 * Unity Cloud Build
 *
 * This API is intended to be used in conjunction with the Unity Cloud Build service. A tool for building your Unity projects in the Cloud.  See https://developer.cloud.unity3d.com for more information.  ## Making requests This website is built to allow requests to be made against the API. If you are currently logged into Cloud Build you should be able to make requests without entering an API key.   You can find your API key in the Unity Cloud Services portal by clicking on 'Cloud Build Preferences' in the sidebar. Copy the API Key and paste it into the upper left corner of this website. It will be used in all subsequent requests.  ## Clients The Unity Cloud Build API is based upon Swagger. Client libraries to integrate with your projects can easily be generated with the [Swagger Code Generator](https://github.com/swagger-api/swagger-codegen).  The JSON schema required to generate a client for this API version is located here:  ``` [API_URL][BASE_PATH]/api.json ```  ## Authorization The Unity Cloud Build API requires an access token from your Unity Cloud Build account, which can be found at https://build.cloud.unity3d.com/login/me  To authenticate requests, include a Basic Authentication header with your API key as the value. e.g.  ``` Authorization: Basic [YOUR API KEY] ```  ## Pagination Paged results will take two parameters. A page number that is calculated based upon the per_page amount. For instance if there are 40 results and you specify page 2 with per_page set to 10 you will receive records 11-20.  Paged results will also return a Content-Range header. For the example above the content range header would look like this:  ``` Content-Range: items 11-20/40 ```  ## Versioning The API version is indicated in the request URL. Upgrading to a newer API version can be done by changing the path.  The API will receive a new version in the following cases:    * removal of a path or request type   * addition of a required field   * removal of a required field  The following changes are considered backwards compatible and will not trigger a new API version:    * addition of an endpoint or request type   * addition of an optional field   * removal of an optional field   * changes to the format of ids  ## Rate Limiting Requests against the Cloud Build API are limited to a rate of 100 per minute. To preserve the quality of service throughout Cloud Build, additional rate limits may apply to some actions. For example, polling aggressively instead of using webhooks or making API calls with a high concurrency may result in rate limiting.  It is not intended for these rate limits to interfere with any legitimate use of the API. Please contact support at <cloudbuild@unity3d.com> if your use is affected by this rate limit.  You can check the returned HTTP headers for any API request to see your current rate limit status.   * __X-RateLimit-Limit:__ maximum number of requests per minute   * __X-RateLimit-Remaining:__ remaining number of requests in the current window   * __X-RateLimit-Reset:__ time at which the current window will reset (UTC epoch seconds)  Once you go over the rate limit you will receive an error response: ``` HTTP Status: 429 {   \"error\": \"Rate limit exceeded, retry in XX seconds\" } ``` 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// OrgsorgidprojectsprojectidbuildtargetsSettings
    /// </summary>
    [DataContract]
    public partial class OrgsorgidprojectsprojectidbuildtargetsSettings :  IEquatable<OrgsorgidprojectsprojectidbuildtargetsSettings>, IValidatableObject
    {
        /// <summary>
        /// Which Operating System to use when building. Currently defaults to &#39;mac&#39;, other targets are in beta and are unlikely to build successfully. Not guaranteed to execute and may be removed in future.
        /// </summary>
        /// <value>Which Operating System to use when building. Currently defaults to &#39;mac&#39;, other targets are in beta and are unlikely to build successfully. Not guaranteed to execute and may be removed in future.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OperatingSystemEnum
        {
            
            /// <summary>
            /// Enum Mac for value: mac
            /// </summary>
            [EnumMember(Value = "mac")]
            Mac = 1,
            
            /// <summary>
            /// Enum Windows for value: windows
            /// </summary>
            [EnumMember(Value = "windows")]
            Windows = 2,
            
            /// <summary>
            /// Enum Linux for value: linux
            /// </summary>
            [EnumMember(Value = "linux")]
            Linux = 3
        }

        /// <summary>
        /// Which Operating System to use when building. Currently defaults to &#39;mac&#39;, other targets are in beta and are unlikely to build successfully. Not guaranteed to execute and may be removed in future.
        /// </summary>
        /// <value>Which Operating System to use when building. Currently defaults to &#39;mac&#39;, other targets are in beta and are unlikely to build successfully. Not guaranteed to execute and may be removed in future.</value>
        [DataMember(Name="operatingSystem", EmitDefaultValue=false)]
        public OperatingSystemEnum? OperatingSystem { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrgsorgidprojectsprojectidbuildtargetsSettings" /> class.
        /// </summary>
        /// <param name="autoBuild">start builds automatically when your repo is updated.</param>
        /// <param name="unityVersion">&#39;latest&#39; or a unity dot version with underscores (ex. &#39;4_6_5&#39;).</param>
        /// <param name="executablename">executablename.</param>
        /// <param name="operatingSystem">Which Operating System to use when building. Currently defaults to &#39;mac&#39;, other targets are in beta and are unlikely to build successfully. Not guaranteed to execute and may be removed in future..</param>
        /// <param name="scm">scm.</param>
        /// <param name="platform">platform.</param>
        /// <param name="advanced">advanced.</param>
        public OrgsorgidprojectsprojectidbuildtargetsSettings(bool? autoBuild = default(bool?), string unityVersion = default(string), string executablename = default(string), OperatingSystemEnum? operatingSystem = default(OperatingSystemEnum?), OrgsorgidprojectsprojectidbuildtargetsSettingsScm scm = default(OrgsorgidprojectsprojectidbuildtargetsSettingsScm), OrgsorgidprojectsprojectidbuildtargetsSettingsPlatform platform = default(OrgsorgidprojectsprojectidbuildtargetsSettingsPlatform), OrgsorgidprojectsprojectidbuildtargetsSettingsAdvanced advanced = default(OrgsorgidprojectsprojectidbuildtargetsSettingsAdvanced))
        {
            this.AutoBuild = autoBuild;
            this.UnityVersion = unityVersion;
            this.Executablename = executablename;
            this.OperatingSystem = operatingSystem;
            this.Scm = scm;
            this.Platform = platform;
            this.Advanced = advanced;
        }
        
        /// <summary>
        /// start builds automatically when your repo is updated
        /// </summary>
        /// <value>start builds automatically when your repo is updated</value>
        [DataMember(Name="autoBuild", EmitDefaultValue=false)]
        public bool? AutoBuild { get; set; }

        /// <summary>
        /// &#39;latest&#39; or a unity dot version with underscores (ex. &#39;4_6_5&#39;)
        /// </summary>
        /// <value>&#39;latest&#39; or a unity dot version with underscores (ex. &#39;4_6_5&#39;)</value>
        [DataMember(Name="unityVersion", EmitDefaultValue=false)]
        public string UnityVersion { get; set; }

        /// <summary>
        /// Gets or Sets Executablename
        /// </summary>
        [DataMember(Name="executablename", EmitDefaultValue=false)]
        public string Executablename { get; set; }


        /// <summary>
        /// Gets or Sets Scm
        /// </summary>
        [DataMember(Name="scm", EmitDefaultValue=false)]
        public OrgsorgidprojectsprojectidbuildtargetsSettingsScm Scm { get; set; }

        /// <summary>
        /// Gets or Sets Platform
        /// </summary>
        [DataMember(Name="platform", EmitDefaultValue=false)]
        public OrgsorgidprojectsprojectidbuildtargetsSettingsPlatform Platform { get; set; }

        /// <summary>
        /// Gets or Sets Advanced
        /// </summary>
        [DataMember(Name="advanced", EmitDefaultValue=false)]
        public OrgsorgidprojectsprojectidbuildtargetsSettingsAdvanced Advanced { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrgsorgidprojectsprojectidbuildtargetsSettings {\n");
            sb.Append("  AutoBuild: ").Append(AutoBuild).Append("\n");
            sb.Append("  UnityVersion: ").Append(UnityVersion).Append("\n");
            sb.Append("  Executablename: ").Append(Executablename).Append("\n");
            sb.Append("  OperatingSystem: ").Append(OperatingSystem).Append("\n");
            sb.Append("  Scm: ").Append(Scm).Append("\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("  Advanced: ").Append(Advanced).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrgsorgidprojectsprojectidbuildtargetsSettings);
        }

        /// <summary>
        /// Returns true if OrgsorgidprojectsprojectidbuildtargetsSettings instances are equal
        /// </summary>
        /// <param name="input">Instance of OrgsorgidprojectsprojectidbuildtargetsSettings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrgsorgidprojectsprojectidbuildtargetsSettings input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AutoBuild == input.AutoBuild ||
                    (this.AutoBuild != null &&
                    this.AutoBuild.Equals(input.AutoBuild))
                ) && 
                (
                    this.UnityVersion == input.UnityVersion ||
                    (this.UnityVersion != null &&
                    this.UnityVersion.Equals(input.UnityVersion))
                ) && 
                (
                    this.Executablename == input.Executablename ||
                    (this.Executablename != null &&
                    this.Executablename.Equals(input.Executablename))
                ) && 
                (
                    this.OperatingSystem == input.OperatingSystem ||
                    (this.OperatingSystem != null &&
                    this.OperatingSystem.Equals(input.OperatingSystem))
                ) && 
                (
                    this.Scm == input.Scm ||
                    (this.Scm != null &&
                    this.Scm.Equals(input.Scm))
                ) && 
                (
                    this.Platform == input.Platform ||
                    (this.Platform != null &&
                    this.Platform.Equals(input.Platform))
                ) && 
                (
                    this.Advanced == input.Advanced ||
                    (this.Advanced != null &&
                    this.Advanced.Equals(input.Advanced))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AutoBuild != null)
                    hashCode = hashCode * 59 + this.AutoBuild.GetHashCode();
                if (this.UnityVersion != null)
                    hashCode = hashCode * 59 + this.UnityVersion.GetHashCode();
                if (this.Executablename != null)
                    hashCode = hashCode * 59 + this.Executablename.GetHashCode();
                if (this.OperatingSystem != null)
                    hashCode = hashCode * 59 + this.OperatingSystem.GetHashCode();
                if (this.Scm != null)
                    hashCode = hashCode * 59 + this.Scm.GetHashCode();
                if (this.Platform != null)
                    hashCode = hashCode * 59 + this.Platform.GetHashCode();
                if (this.Advanced != null)
                    hashCode = hashCode * 59 + this.Advanced.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
